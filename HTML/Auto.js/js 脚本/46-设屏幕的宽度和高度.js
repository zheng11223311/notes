// 屏幕大小
console.log(device.width); //720
console.log(device.height); //1280

// 设置屏幕
// 设置脚本坐标点击所适合的屏幕宽高。
// 如果脚本运行时，屏幕宽度不一致会自动放缩坐标。
// 保证不同手机点击的位置一致
setScreenMetrics(width, height)


// 免root 手机的三种模拟点击的方式
// 点击 xy  大约150ms
// click(100,100)

// 长按 xy  大约600ms
// longClick(100,100)

// xy 毫秒, >500ms 为长按,小于为点击
// 解决 longClick 650ms 还不能显示出长按的效果,需要更多时间的长按才行
// press(100,100,1000)


// 免root 手机的三种模拟滑动的方式
// x1,y1  ,x2,y2   ,毫秒
// swipe(100,100,200,200,1000)

// 模拟单个手势多位置滑动
// 每一个点到下一个位置点的时间,[x1,y1],[x2,y2]...
// 这里总耗时2s
// gesture(1000,[100,100],[200,200],[300,300])

// 模拟多个手势多位置滑动
// 每一个手指的每一个点到下一个位置点的时间,[x1,y1],[x2,y2]...
// gestures([1000,[100,100],[200,200],[300,300]],
//     [2000,[1100,1100],[2200,2020],[3200,3200]])


// 使用root 权限模拟点击
var ra=new RootAutomator()
events.on('exit',()=>{
    ra.exit()
})

// xy 给手指取任意id 名
ra.tap(100,100,1)

// tap 无反应时,使用press 代替
// xy 毫秒ms  [,id] 
ra.press(100,500,1000)

// 长按
// xy [,id ]
ra.longPress(100,500)

//使用root 权限模拟滑动
// x1,y1  ,x2,y2  [,毫秒ms] [,id]
// 有滑动,但是不会带有滑动的效果,仅仅只是手指的滑动,不会触发滑动事件
ra.swiper(100,100,200,200,1000,1)


// 使用root 权限实现模拟拖动(效果不稳定)
// xy [,id]
ra.touchDown(100,100,1)
ra.touchMove(100,100,1)
// [,id]
ra.touchUp(1)

// 使用root 权限的点击和滑动的简单命令
// tap(x,y)

// swiper(x1,y1,x2,y2,[durtion])